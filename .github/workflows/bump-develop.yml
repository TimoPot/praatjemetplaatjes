# This workflow is responsible for automatically updating the application's
# version number in package.json whenever a feature branch is merged into 'develop'.

name: üî¢ Auto Version Bump on Develop Merge

on:
  push:
    branches:
      - develop # Only trigger when a push occurs to the 'develop' branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  version-bumper:
    runs-on: ubuntu-latest
    
    # CRITICAL CONDITION:
    # 1. Check if the push was a standard PR merge commit (e.g., from a PR).
    #    and that it was a feat/ branch
    #    This prevents the job from running on direct pushes and, crucially,
    #    prevents the version bump's own commit from triggering an infinite loop.
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, '*feat/')
   
    steps:
      - name: ‚¨áÔ∏è Checkout Repository
        uses: actions/checkout@v4
        with:
          # Fetch all history and tags to allow npm version to work correctly
          fetch-depth: 0 
          
      - name: üõ†Ô∏è Setup Bun & Node
        # Setting up Node ensures the 'npm' utility for versioning is available.
        # We also install Bun as requested, for environment consistency.
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
          node-version: 20

      # Configure Git with the bot's identity so it can commit the new version.
      - name: ‚öôÔ∏è Configure Git Credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: üöÄ Auto Bump Version (Minor)
        # We use 'npm version' because it atomically updates package.json, 
        # creates a tag, and optionally creates a commit. 
        # We use --no-git-tag-version here because we want manual control over the commit message.
        run: |
          # Change 'patch' to 'minor' or 'major' based on your feature branch policy
          bun pm version minor --no-git-tag-version 
          echo "Version bumped to $(node -p "require('./package.json').version")"

      - name: üíæ Commit and Push New Version to Develop
        run: |
          NEW_VERSION=$(node -p "require('./package.json').version")

          git add package.json
          # Commit message includes [skip ci] to prevent this commit from 
          # triggering the CI pipeline again (and thus preventing a version-bump loop)
          git commit -m "CI: Bump version to v${NEW_VERSION} after merge [skip ci]"

          # Push the version commit back to the develop branch
          git push origin develop
